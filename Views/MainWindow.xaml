<Window x:Class="pi_client.Views.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:pi_client.Views"
        xmlns:vm="clr-namespace:pi_client.ViewModels"
        xmlns:converters="clr-namespace:pi_client.Converters"
        Title="π-Calculus Visualizer" 
        Height="600" 
        Width="800"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <converters:ActiveColorConverter x:Key="ActiveColorConverter"/>
        <converters:SendVisibilityConverter x:Key="SendVisibilityConverter"/>
        <converters:ReceiveVisibilityConverter x:Key="ReceiveVisibilityConverter"/>
        <converters:PositionConverter x:Key="PositionConverter"/>
        <converters:ActiveDashConverter x:Key="ActiveDashConverter"/>

        <Style TargetType="Button">
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="MinWidth" Value="80"/>
        </Style>

        <Style TargetType="Ellipse" x:Key="ExecutionBall">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Fill" Value="#FF4081"/>
            <Setter Property="Visibility" Value="Visible"/>
        </Style>

        <Style x:Key="ModernButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#3F51B5"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12 6"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="4" ShadowDepth="2" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        CornerRadius="4"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5C6BC0"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3949AB"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Border" x:Key="ProcessBorderStyle">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="BorderBrush" Value="#0D47A1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background">
                <Setter.Value>
                    <Binding Path="IsActive" Converter="{StaticResource ActiveColorConverter}"/>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Control Panel -->
        <Border Grid.Row="0" Background="#EEE" Padding="10">
            <StackPanel Orientation="Horizontal">
                <Button Content="Send Command" Command="{Binding SendJsonCommand}" Margin="5" Style="{StaticResource ModernButtonStyle}"/>
                <Button Content="Add Send" Command="{Binding AddSendCommand}" Margin="5" Style="{StaticResource ModernButtonStyle}"/>
                <Button Content="Add Receive" Command="{Binding AddReceiveCommand}" Margin="5" Style="{StaticResource ModernButtonStyle}"/>
                <Button Content="Connect" Command="{Binding ConnectCommand}"
                Background="Blue" Foreground="White" Margin="5" Style="{StaticResource ModernButtonStyle}"/>
                <Button Content="Execute" Command="{Binding ExecuteCommand}"
                Background="Green" Foreground="White" Margin="5" Style="{StaticResource ModernButtonStyle}"/>
                <Button Content="Reset" Command="{Binding ResetCommand}" 
                Background="#FF5722" Foreground="White" Margin="5" Style="{StaticResource ModernButtonStyle}"/>
            </StackPanel>
        </Border>

        <!-- Workspace -->
        <Canvas Grid.Row="1" Background="White" x:Name="MainCanvas">
            <!-- Channels (lines) -->
            <ItemsControl ItemsSource="{Binding Channels}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Line 
                            X1="{Binding Source.Position.X}" 
                            Y1="{Binding Source.Position.Y}"
                            X2="{Binding Target.Position.X}" 
                            Y2="{Binding Target.Position.Y}"
                            Stroke="{Binding IsActive, Converter={StaticResource ActiveColorConverter}}" 
                            StrokeThickness="3"
                            StrokeDashArray="{Binding IsActive, Converter={StaticResource ActiveDashConverter}}">
                            <Line.ToolTip>
                                <ToolTip>
                                    <TextBlock Text="{Binding Name}"/>
                                </ToolTip>
                            </Line.ToolTip>
                        </Line>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Шарики анимации -->
            <ItemsControl ItemsSource="{Binding ActiveChannels}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Ellipse Style="{StaticResource ExecutionBall}">
                            <Ellipse.RenderTransform>
                                <TranslateTransform 
                        X="{Binding BallPosition.X}" 
                        Y="{Binding BallPosition.Y}"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Processes - FIXED POSITIONING -->
            <ItemsControl ItemsSource="{Binding Processes}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Style="{StaticResource ProcessBorderStyle}">
                            <Border.InputBindings>
                                <MouseBinding 
                                    MouseAction="LeftClick" 
                                    Command="{Binding DataContext.SelectProcessCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                    CommandParameter="{Binding}"/>
                            </Border.InputBindings>

                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold" HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding Channel}" Margin="0,5" HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding Message}" HorizontalAlignment="Center" 
                                           Visibility="{Binding Type, Converter={StaticResource SendVisibilityConverter}}"/>
                                <TextBlock Text="{Binding Filter}" HorizontalAlignment="Center" 
                                           Visibility="{Binding Type, Converter={StaticResource ReceiveVisibilityConverter}}"/>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
        </Canvas>
    </Grid>
</Window>